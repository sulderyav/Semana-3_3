1. Dado los 2 ejercicios siguientes expliques paso a paso que valores toma cada variable del script en cada instante.
En la primera línea se declaran dos variables, "a" y "b", sin asignarles un valor.
En la función "operacion", se declara una variable local "a" con un valor de 1.
Dentro de la función, se realiza la operación "a + b++" y el resultado se asigna a la variable "operacio". El operador "++" después de "b" significa que el valor de "b" se incrementará en 1 después de realizar la operación.
La función "operacion" retorna el valor de "operacio".
Fuera de la función, se asigna a la variable "a" un valor de 2 y a "b" un valor de 3.
Se llama a la función "operacion" y se pasa el valor de "a" como argumento. Dentro de la función, el valor de "a" se reasigna a 1, y se realiza la operación "1 + 3" (ya que "b" se ha incrementado en 1 después de la operación dentro de la función) y retorna 4.

En la primera línea se declaran dos variables, "a" y "b", sin asignarles un valor.
Luego se asigna a "a" un valor de 3 y a "b" un valor de 2.
En la función "operacion", se recibe un argumento "c" y se reasigna a "a" un valor de 1.
Dentro de la función, se realiza la operación "++b + c" y el resultado se asigna a la variable "operacio". El operador "++" antes de "b" significa que el valor de "b" se incrementará en 1 antes de realizar la operación.
La función "operacion" retorna el valor de "operacio".
Se llama a la función "operacion" y se pasa el valor de "b" como argumento. Dentro de la función, el valor de "b" se incrementa en 1, se realiza la operación "3 + 2" (ya que "b" se ha incrementado en 1 antes de la operación) y retorna 5.

2. Dado el ejercicio siguiente expliques paso a paso su funcionamiento
(Hoisting) 
1.	Se llama a la función console.log(source) para imprimir el valor de la variable source en la consola. Sin embargo, en este punto, la variable source aún no ha sido declarada ni asignada un valor, por lo que el resultado sería undefined.

2.	Se llama a la función print(). Como la declaración de esta función se encuentra antes de su llamada, JavaScript la "levanta" (hoist) al principio del ámbito en el que se encuentra, permitiendo su uso inmediatamente después de su declaración. Dentro de la función print, se llama a console.log("desde print: " + source) para imprimir el valor de la variable source precedido por el texto "desde print: ". Sin embargo, en este punto, la variable source aún no ha sido declarada ni asignada un valor, por lo que el resultado sería "desde print: undefined"

3.	Finalmente, se declara la variable source y se le asigna el valor "escuelafrontend.com".
4.	Se vuelve a llamar a la función print(). Como en este momento la variable source ya ha sido declarada y asignada un valor, al llamar a console.log("desde print: " + source) dentro de la función, el resultado sería "desde print: escuelafrontend.com"
